<blocks app="Snap! 7dev, https://snap.berkeley.edu" version="2"><block-definition s="Create costume in style %&apos;Which style&apos; from %&apos;costume&apos; $nl then %&apos;receive new costume&apos;" type="command" category="looks"><comment x="0" y="0" w="224.2857142857143" collapsed="false">Applies the selected style to the indicated custome number and adds the new costume this sprite.</comment><header></header><code></code><translations></translations><inputs><input type="%txt" readonly="true"><options>Katsushika Hokusai&apos;s Wave&#xD;Francis Picabia&apos;s Udnie&#xD;Pablo Picasso&apos;s La Muse&#xD;Mathura Style&#xD;Leonid Afremov&apos;s Rain Princess&#xD;Edvard Munch&apos;s Scream&#xD;Théodore Géricault&apos;s Raft of the Medusa&#xD;Roberto Matta</options></input><input type="%obj">1</input><input type="%cs"></input></inputs><script><custom-block s="run eCraft2Learn command %txt with %mult%s"><l>create_costume_with_style</l><list><block var="Which style"/><block var="costume"/><block var="receive new costume"/></list></custom-block></script></block-definition><block-definition s="get costume features of %&apos;costume&apos; then %&apos;receive features&apos;" type="command" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%obj"></input><input type="%cs"></input></inputs><script><custom-block s="run eCraft2Learn command %txt with %mult%s"><l>get_image_features</l><list><block var="costume"/><block var="receive features"/></list></custom-block></script></block-definition><block-definition s="read URL %&apos;URL&apos; then %&apos;receive contents&apos; or if error %&apos;receive error&apos; using an access key if needed %&apos;key&apos; in JSON format %&apos;JSON&apos;" type="command" category="sensing"><comment x="0" y="0" w="383" collapsed="false">Reads the contents of &apos;URL&apos; and then calls &apos;receive contents&apos; with that text (in HTML). If there was an error &apos;receive error&apos; is called instead. &apos;key&apos; needs only be provided if the URL requires as access key.</comment><header></header><code></code><translations></translations><inputs><input type="%txt"></input><input type="%cmdRing"></input><input type="%cmdRing"></input><input type="%txt"></input><input type="%b"></input></inputs><script><custom-block s="run eCraft2Learn command %txt with %mult%s"><l>read_url</l><list><block var="URL"/><block var="receive contents"/><block var="receive error"/><block var="key"/><block var="JSON"/></list></custom-block></script></block-definition><block-definition s="Ask Wikipedia about %&apos;search words&apos; $nl then %&apos;process response&apos; with list of matches $nl but if error %&apos;process error&apos; with error message" type="command" category="sensing"><comment x="0" y="0" w="167.14285714285717" collapsed="false">Searches Wikipedia for &apos;search words&apos; and then passes the list of results to &apos;process response&apos;.</comment><header></header><code></code><translations></translations><inputs><input type="%txt"></input><input type="%cmdRing"></input><input type="%cmdRing"></input></inputs><script><custom-block s="read URL %txt then %cmdRing or if error %cmdRing using an access key if needed %txt in JSON format %b"><block s="reportJoinWords"><list><custom-block s="Wikipedia domian"></custom-block><l>/w/api.php?format=json&amp;action=query&amp;prop=extracts&amp;exintro=&amp;explaintext=&amp;origin=*&amp;generator=prefixsearch&amp;gpssearch=</l><block var="search words"/></list></block><block s="reifyScript"><script><custom-block s="let %upvar be %s"><l>extracts</l><custom-block s="extracts in Wikipedia response %s"><block var="response"/></custom-block></custom-block><block s="doRun"><block var="process response"/><list><block var="extracts"/></list></block></script><list><l>response</l></list></block><block var="process error"/><l></l><l><bool>true</bool></l></custom-block></script></block-definition><block-definition s="extracts in Wikipedia response %&apos;Wikipedia answer&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><custom-block s="let %upvar be %s"><l>query</l><block s="reportFindFirst"><block s="reifyPredicate"><autolambda><block s="reportEquals"><block s="reportListItem"><l>1</l><l/></block><l>query</l></block></autolambda><list></list></block><block var="Wikipedia answer"/></block></custom-block><block s="doIfElse"><block var="query"/><script><block s="doReport"><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportGreaterThan"><block s="reportStringSize"><block var="extract"/></block><l>0</l></block></autolambda><list><l>extract</l></list></block><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportListItem"><l>2</l><block s="reportListItem"><l>5</l><block s="reportListItem"><l>2</l><l/></block></block></block></autolambda><list></list></block><block s="reportListItem"><l>2</l><block s="reportFindFirst"><block s="reifyPredicate"><autolambda><block s="reportEquals"><block s="reportListItem"><l>1</l><l/></block><l>pages</l></block></autolambda><list></list></block><block s="reportListItem"><l>2</l><block s="reportFindFirst"><block s="reifyPredicate"><autolambda><block s="reportEquals"><block s="reportListItem"><l>1</l><l/></block><l>query</l></block></autolambda><list></list></block><block var="Wikipedia answer"/></block></block></block></block></block></block></block></script><script><block s="doReport"><block s="reportNewList"><list></list></block></block></script></block></script></block-definition><block-definition s="Wikipedia domian" type="reporter" category="other"><header></header><code></code><translations></translations><inputs></inputs><script><custom-block s="Load eCraft2Learn library"></custom-block><block s="doReport"><custom-block s="call eCraft2Learn reporter %txt with %mult%s"><l>wikipedia_domain</l><list></list></custom-block></block></script></block-definition><block-definition s="costume from camera %&apos;mirrored&apos; mirrored" type="reporter" category="looks"><comment x="0" y="0" w="207.14285714285717" collapsed="true">Reports a costume using the camera.</comment><header></header><code></code><translations></translations><inputs><input type="%b"></input></inputs><script><custom-block s="let %upvar be %s"><l>result</l><block s="reportBoolean"><l><bool>false</bool></l></block></custom-block><custom-block s="Create costume from camera %b and pass it to %cmdRing"><block var="mirrored"/><block s="reifyScript"><script><block s="doSetVar"><l>result</l><block var="costume"/></block></script><list><l>costume</l></list></block></custom-block><block s="doWaitUntil"><block s="reportIsA"><block var="result"/><l><option>costume</option></l></block></block><block s="doReport"><block var="result"/></block></script></block-definition><block-definition s="Create costume from camera %&apos;mirrored&apos; and pass it to %&apos;process costume&apos;" type="command" category="looks"><comment w="304" collapsed="false">Creates a costume from the video camera and passes it the &apos;process costume&apos; blocks.</comment><header></header><code></code><translations></translations><inputs><input type="%b"></input><input type="%cmdRing"></input></inputs><script><custom-block s="run eCraft2Learn command %txt with %mult%s"><l>costume_from_camera_version_2</l><list><block var="mirrored"/><block var="process costume"/></list></custom-block></script></block-definition><block-definition s="Euclidean distance between %&apos;point 1&apos; and %&apos;point 2&apos; using JavaScript" type="reporter" category="lists"><comment x="0" y="0" w="184.2857142857143" collapsed="false">Reports the distance between the points. Works with any dimensions from 1 to what fits in memory.&#xD;To see how this can be implemented in a slower way in Snap! open the &apos;distance from features ... to ...&apos; block</comment><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><custom-block s="Load eCraft2Learn library"></custom-block><block s="doReport"><custom-block s="call eCraft2Learn reporter %txt with %mult%s"><l>euclidean_distance</l><list><block var="point 1"/><block var="point 2"/></list></custom-block></block></script></block-definition><block-definition s="cosine similarity %&apos;list 1&apos; %&apos;list 2&apos; JavaScript version" type="reporter" category="lists"><comment x="0" y="0" w="234" collapsed="false">See https://en.wikipedia.org/wiki/Cosine_similarity&#xD;There is a pure Snap! version of this.</comment><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><custom-block s="Load eCraft2Learn library"></custom-block><block s="doReport"><custom-block s="call eCraft2Learn reporter %txt with %mult%s"><l>cosine_similarity</l><list><block var="list 1"/><block var="list 2"/></list></custom-block></block></script></block-definition><block-definition s="Open help page" type="command" category="other"><header></header><code></code><translations></translations><inputs></inputs><script><custom-block s="run eCraft2Learn command %txt with %mult%s"><l>open_help_page</l><list><l></l></list></custom-block></script></block-definition><block-definition s="let %&apos;var&apos; be %&apos;value&apos;" type="command" category="other"><header></header><code></code><translations></translations><inputs><input type="%upvar"></input><input type="%s"></input></inputs><script><block s="doSetVar"><l>var</l><block var="value"/></block></script></block-definition><block-definition s="set flag %&apos;which&apos; to %&apos;tf&apos;" type="command" category="sensing"><comment x="0" y="0" w="254.66666666666666" collapsed="false">Allows changing global settings programmatically.&#xD;This block is for Boolean (checkbox) settings; use&#xD;SET VALUE for numeric or text values.&#xD;&#xD;Eisenberg&apos;s Law:  Anything you can do from the user interface you should be able to do in your program, and vice versa.  This library is just a beginning; there are many UI controls outside of the Settings menu.</comment><header></header><code></code><translations>pt:altera o valor da configuração _ para _&#xD;</translations><inputs><input type="%s" readonly="true"><options>Presentation mode&#xD;Retina display support&#xD;Long form input dialog&#xD;Plain prototype labels&#xD;Input sliders&#xD;Execute on slider change&#xD;Clicking sound&#xD;Turbo mode&#xD;Flat design&#xD;Keyboard editing&#xD;Visible stepping&#xD;Thread safe scripts&#xD;Prefer smooth animations&#xD;Flat line ends&#xD;Codification support&#xD;Inheritance support&#xD;Hyper blocks support</options></input><input type="%b"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>which</l><l>tf</l></list><l>var   stage = this.parentThatIsA(StageMorph),&#xD;        ide = stage.parentThatIsA(IDE_Morph),&#xD;        world = stage.parentThatIsA(WorldMorph),&#xD;        thisObj = this;&#xD;&#xD;if (tf != !!tf) return;&#xD;&#xD;try{&#xD;ide.savingPreferences = false;&#xD;&#xD;switch (which) {&#xD;    case &apos;Presentation mode&apos;:&#xD;        if (tf != ide.isAppMode) ide.toggleAppMode();&#xD;        break;&#xD;    case &apos;Retina display support&apos;:&#xD;        if (tf != isRetinaEnabled()) ide.toggleRetina();&#xD;        break;&#xD;    case &apos;Long form input dialog&apos;:&#xD;        if (tf != InputSlotDialogMorph.prototype.isLaunchingExpanded)&#xD;            ide.toggleLongFormInputDialog();&#xD;        break;&#xD;    case &apos;Plain prototype labels&apos;:&#xD;        if (tf != BlockLabelPlaceHolderMorph.prototype.plainLabel)&#xD;            ide.togglePlainPrototypeLabels();&#xD;        break;&#xD;    case &apos;Input sliders&apos;:&#xD;        MorphicPreferences.useSliderForInput = tf;&#xD;        break;&#xD;    case &apos;Execute on slider change&apos;:&#xD;        ArgMorph.prototype.executeOnSliderEdit = tf;&#xD;        break;&#xD;    case &apos;Clicking sound&apos;:&#xD;        if (tf != !!BlockMorph.prototype.snapSound)&#xD;            BlockMorph.prototype.toggleSnapSound();&#xD;        break;&#xD;    case &apos;Turbo mode&apos;:&#xD;        if (tf != stage.isFastTracked)&#xD;            ide.toggleFastTracking();&#xD;        break;&#xD;    case &apos;Flat design&apos;:&#xD;        if (tf == MorphicPreferences.isFlat) break;&#xD;        if (tf)&#xD;            ide.flatDesign();&#xD;        else&#xD;            ide.defaultDesign();&#xD;        break;&#xD;    case &apos;Keyboard editing&apos;:&#xD;        if (thisObj.scripts.focus &amp;&amp; !tf) {&#xD;            thisObj.scripts.focus.stopEditing();&#xD;        } else if (tf &amp;&amp; !thisObj.scripts.focus) {&#xD;            thisObj.scripts.toggleKeyboardEntry();&#xD;        };&#xD;        break;&#xD;    case &apos;Visible stepping&apos;:&#xD;        if (tf != Process.prototype.enableSingleStepping)&#xD;            ide.toggleSingleStepping();&#xD;        break;&#xD;    case &apos;Thread safe scripts&apos;:&#xD;        stage.isThreadSafe = tf;&#xD;        break;&#xD;    case &apos;Prefer smooth animations&apos;:&#xD;        if (tf != (StageMorph.prototype.frameRate &gt; 0))&#xD;            ide.toggleVariableFrameRate();&#xD;        break;&#xD;    case &apos;Flat line ends&apos;:&#xD;        SpriteMorph.prototype.useFlatLineEnds = tf;&#xD;        break;&#xD;    case &apos;Codification support&apos;:&#xD;        if (tf != StageMorph.prototype.enableCodeMapping) {&#xD;            StageMorph.prototype.enableCodeMapping = tf;&#xD;            ide.currentSprite.blocksCache.variables = null;&#xD;            ide.currentSprite.paletteCache.variables = null;&#xD;            ide.refreshPalette();&#xD;        }&#xD;        break;&#xD;    case &apos;Inheritance support&apos;:&#xD;        if (tf != StageMorph.prototype.enableInheritance) {&#xD;            StageMorph.prototype.enableInheritance = tf;&#xD;            ide.currentSprite.blocksCache.variables = null;&#xD;            ide.currentSprite.paletteCache.variables = null;&#xD;            ide.refreshPalette();&#xD;        }&#xD;        break;&#xD;    case &apos;Hyper blocks support&apos;:&#xD;        Process.prototype.enableHyperOps = tf;&#xD;        break;&#xD;};&#xD;}&#xD;finally {&#xD;ide.savingPreferences = false;&#xD;};&#xD;</l></block><list><block var="which"/><block var="tf"/></list></block></script></block-definition><block-definition s="load eCraft2Learn" type="command" category="other"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doApplyExtension"><l>src_load(url)</l><list><l>https://ecraft2learn.github.io/ai/ecraft2learn.js</l></list></block><block s="doApplyExtension"><l>src_load(url)</l><list><l>https://ecraft2learn.github.io/ai/js/ecraft2learn_snap_extension.js</l></list></block></script></block-definition><block-definition s="call eCraft2Learn reporter %&apos;reporter name&apos; with %&apos;inputs&apos;" type="reporter" category="other"><header></header><code></code><translations></translations><inputs><input type="%txt"></input><input type="%mult%s"></input></inputs><script><custom-block s="load eCraft2Learn"></custom-block><block s="doReport"><block s="reportApplyExtension"><l>e2l_call(reporter_name, parameters)</l><list><block var="reporter name"/><block var="inputs"/></list></block></block></script></block-definition><block-definition s="run eCraft2Learn command %&apos;command name&apos; with %&apos;inputs&apos;" type="command" category="other"><header></header><code></code><translations></translations><inputs><input type="%txt"></input><input type="%mult%s"></input></inputs><script><custom-block s="load eCraft2Learn"></custom-block><block s="doApplyExtension"><l>e2l_run(command_name, parameters)</l><list><block var="command name"/><block var="inputs"/></list></block></script></block-definition><block-definition s="Load eCraft2Learn library" type="command" category="other"><comment x="0" y="0" w="238.57142857142858" collapsed="false">No longer needed in Snap! 7+ but retained to avoid error from blocks that expect it.</comment><header></header><code></code><translations></translations><inputs></inputs></block-definition></blocks>