<blocks app="Snap! 4.0, http://snap.berkeley.edu" version="1"><block-definition s="listen" type="command" category="other"><header></header><code></code><inputs></inputs><script><custom-block s="Listen then %cmdRing but if error %cmdRing"><block s="reifyScript"><script><block s="doSetVar"><l>last thing spoken</l><block var="spoken"/></block><block s="doBroadcast"><l>heard something</l></block><custom-block s="listen"></custom-block></script><list><l>spoken</l></list></block><block s="reifyScript"><script><block s="doSetVar"><l>speech recognition error</l><block var="error"/></block><block s="doBroadcast"><l>speech recognition error</l></block><block s="doIfElse"><block s="reportEquals"><block var="speech recognition error"/><l>no-speech</l></block><script><custom-block s="Speak %txt"><l>I didn&apos;t hear anything for a while. Bye. Click the green flag to start listening again..</l></custom-block><custom-block s="Stop speech recognition"></custom-block></script><script><custom-block s="Speak %txt"><block s="reportJoinWords"><list><l>There was an error. </l><block var="speech recognition error"/></list></block></custom-block><block s="bubble"><block s="reportJoinWords"><list><l>There was an error. </l><block var="speech recognition error"/></list></block></block><custom-block s="Speak %txt then %cmdRing"><l>Try again.</l><block s="reifyScript"><script><custom-block s="listen"></custom-block></script><list></list></block></custom-block></script></block></script><list><l>error</l></list></block></custom-block></script></block-definition><block-definition s="set language to %&apos;language&apos;" type="command" category="other"><header></header><code></code><inputs><input type="%s"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>lang</l></list><l>if (window.speech_recognition) {&#xD;   window.speech_recognition.lang = lang;&#xD;}</l></block><list><block var="language"/></list></block></script></block-definition><block-definition s="Setup camera %&apos;width&apos; %&apos;height&apos;" type="command" category="other"><header></header><code></code><inputs><input type="%n"></input><input type="%n"></input></inputs><script><custom-block s="run eCraft2Learn command %txt with %mult%s"><l>setup_camera</l><list><block var="width"/><block var="height"/></list></custom-block></script></block-definition><block-definition s="Watson image key" type="reporter" category="other"><header></header><code></code><inputs></inputs><script><block s="doReport"><l>cafd37ff762bdd2f1ddbe674dd8f9eeee3d68111</l></block></script></block-definition><block-definition s="Microsoft image key" type="reporter" category="other"><header></header><code></code><inputs></inputs><script><block s="doReport"><l>5f5235f7a3b74d0790d8658c3066f515</l></block></script></block-definition><block-definition s="Google image key" type="reporter" category="other"><header></header><code></code><inputs></inputs><script><block s="doReport"><l>AIzaSyBHX7HqSsxq4UQ2V99i2BNyQ9xajC02BzY</l></block></script></block-definition><block-definition s="Ask %&apos;cloud provider&apos; to say what it sees then %&apos;then receive response&apos; and show the picture %&apos;show photo?&apos;" type="command" category="other"><header></header><code></code><inputs><input type="%txt"></input><input type="%cmdRing"></input><input type="%s"></input></inputs><script><custom-block s="run eCraft2Learn command %txt with %mult%s"><l>take_picture_and_analyse</l><list><block var="cloud provider"/><block var="show photo?"/><block var="then receive response"/></list></custom-block></script></block-definition><block-definition s="Microsoft speech key" type="reporter" category="other"><header></header><code></code><inputs></inputs><script><block s="doReport"><l>Enter your key here</l></block></script></block-definition><block-definition s="run eCraft2Learn command %&apos;command name&apos; with %&apos;inputs&apos;" type="command" category="other"><header></header><code></code><inputs><input type="%txt"></input><input type="%mult%s"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>function_name</l><l>parameters</l></list><l>"use strict";
&#xD;&#xD;&#xD;var when_script_loaded = function () {
&#xD;&#xD;&#xD;	window.ecraft2learn_library_script = undefined;
&#xD;&#xD;&#xD;	ecraft2learn.snap_context = this;
&#xD;&#xD;&#xD;        ecraft2learn.run(function_name, parameters);
&#xD;&#xD;&#xD;    }.bind(this);    
&#xD;&#xD;&#xD;if (typeof ecraft2learn === &apos;object&apos;) {
&#xD;&#xD;&#xD;    ecraft2learn.snap_context = this;
&#xD;&#xD;&#xD;    ecraft2learn.run(function_name, parameters);
&#xD;&#xD;&#xD;} else if (window.ecraft2learn_library_script) {
&#xD;&#xD;&#xD;    window.ecraft2learn_library_script.addEventListener(&apos;load&apos;, when_script_loaded);
&#xD;&#xD;&#xD;} else {
&#xD;&#xD;&#xD;    window.ecraft2learn_library_script = document.createElement("script");
&#xD;&#xD;&#xD;    window.ecraft2learn_library_script.type = "text/javascript";
&#xD;&#xD;&#xD;    window.ecraft2learn_library_script.src = "https://ecraft2learn.github.io/ai/ecraft2learn.js";
&#xD;&#xD;&#xD;    window.ecraft2learn_library_script.addEventListener(&apos;load&apos;, when_script_loaded);
&#xD;&#xD;&#xD;    document.head.appendChild(script);
&#xD;&#xD;&#xD;}</l></block><list><block var="command name"/><block var="inputs"/></list></block></script></block-definition><block-definition s="call eCraft2Learn reporter %&apos;reporter name&apos; with %&apos;inputs&apos;" type="reporter" category="other"><header></header><code></code><inputs><input type="%txt"></input><input type="%mult%s"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>function_name</l><l>parameters</l></list><l>if (typeof ecraft2learn === &apos;object&apos;) {
&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;    return ecraft2learn.run(function_name, parameters);
&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;} else {
&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;    alert("Any eCraft2Learn command must be run before the " + function_name + " reporter.");
&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;    return 0;
&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;}</l></block><list><block var="reporter name"/><block var="inputs"/></list></block></block></script></block-definition><block-definition s="Speak %&apos;message&apos;" type="command" category="sound"><header></header><code></code><inputs><input type="%txt"></input></inputs><script><custom-block s="run eCraft2Learn command %txt with %mult%s"><l>speak</l><list><block var="message"/><l></l><l></l><l></l><l></l><l></l><l></l></list></custom-block></script></block-definition><block-definition s="Stop speech recognition" type="command" category="sound"><header></header><code></code><inputs></inputs><script><custom-block s="run eCraft2Learn command %txt with %mult%s"><l>stop_speech_recognition</l><list></list></custom-block></script></block-definition><block-definition s="Speak %&apos;message&apos; then %&apos;to do when finished speaking&apos;" type="command" category="sound"><header></header><code></code><inputs><input type="%txt"></input><input type="%cmdRing"></input></inputs><script><custom-block s="run eCraft2Learn command %txt with %mult%s"><l>speak</l><list><block var="message"/><l></l><l></l><l></l><l></l><l></l><block var="to do when finished speaking"/></list></custom-block></script></block-definition><block-definition s="Do %&apos;handle response&apos; with what Microsoft sees and show the photo %&apos;show&apos;" type="command" category="sensing"><header></header><code></code><inputs><input type="%cmdRing"></input><input type="%b"></input></inputs><script><custom-block s="Ask %txt to say what it sees then %cmdRing and show the picture %s"><l>Microsoft</l><block s="reifyScript"><script><block s="doRun"><block var="handle response"/><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>3</l><block var="responses"/></block></block></block></block></list></block></script><list><l>responses</l></list></block><block var="show"/></custom-block></script></block-definition><block-definition s="Do %&apos;handle response&apos; with what IBM Watson sees and show the photo %&apos;show&apos;" type="command" category="sensing"><header></header><code></code><inputs><input type="%cmdRing"></input><input type="%b"></input></inputs><script><custom-block s="Ask %txt to say what it sees then %cmdRing and show the picture %s"><l>Watson</l><block s="reifyScript"><script><block s="doRun"><block var="handle response"/><list><custom-block s="map %repRing over %mult%l"><block s="reifyReporter"><autolambda><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><l/></block></block></autolambda><list></list></block><list><block var="response"/></list></custom-block></list></block></script><list><l>response</l></list></block><block var="show"/></custom-block></script></block-definition><block-definition s="Do %&apos;handle response&apos; with what Google sees and show the photo %&apos;show&apos;" type="command" category="sensing"><header></header><code></code><inputs><input type="%cmdRing"></input><input type="%b"></input></inputs><script><custom-block s="Ask %txt to say what it sees then %cmdRing and show the picture %s"><l>Google</l><block s="reifyScript"><script><block s="doRun"><block var="handle response"/><list><custom-block s="map %repRing over %mult%l"><block s="reifyReporter"><autolambda><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><l/></block></block></autolambda><list></list></block><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="response"/></block></block></block></list></custom-block></list></block></script><list><l>response</l></list></block><block var="show"/></custom-block></script></block-definition><block-definition s="Listen then %&apos;handle response&apos; but if error %&apos;handle error&apos;" type="command" category="sensing"><header></header><code></code><inputs><input type="%cmdRing"></input><input type="%cmdRing"></input></inputs><script><custom-block s="run eCraft2Learn command %txt with %mult%s"><l>start_speech_recognition</l><list><block var="handle response"/><block var="handle error"/></list></custom-block></script></block-definition><block-definition s="Listen %&apos;respond as heard&apos; then finally %&apos;handle response&apos; but if nothing heard %&apos;handle nothing said&apos;" type="command" category="sensing"><header></header><code></code><inputs><input type="%cmdRing"></input><input type="%cmdRing"></input><input type="%cmdRing"></input></inputs><script><custom-block s="run eCraft2Learn command %txt with %mult%s"><l>start_microsoft_speech_recognition</l><list><block var="respond as heard"/><block var="handle response"/><block var="handle nothing said"/></list></custom-block></script></block-definition><block-definition s="Listen for %&apos;duration&apos; seconds then %&apos;handle response&apos; but if error %&apos;handle error&apos;" type="command" category="sensing"><header></header><code></code><inputs><input type="%n"></input><input type="%cmdRing"></input><input type="%cmdRing"></input></inputs><script><custom-block s="run eCraft2Learn command %txt with %mult%s"><l>start_microsoft_speech_recognition_batch</l><list><block var="handle response"/><block var="handle error"/><block var="duration"/></list></custom-block></script></block-definition></blocks>