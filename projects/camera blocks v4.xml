<blocks app="Snap! 4.0, http://snap.berkeley.edu" version="1"><block-definition s="Use camera to make costume" type="command" category="looks"><header></header><code></code><inputs></inputs><script><custom-block s="run eCraft2Learn command %txt with %mult%s"><l>add_photo_as_costume</l><list></list></custom-block></script></block-definition><block-definition s="Show current photo %&apos;cloud provider&apos;" type="command" category="looks"><header></header><code></code><inputs><input type="%txt"><options>Google
Microsoft
IBM Watson</options></input></inputs><script><custom-block s="run eCraft2Learn command %txt with %mult%s"><l>add_current_photo_as_costume</l><list><block var="cloud provider"/></list></custom-block></script></block-definition><block-definition s="Ask %&apos;cloud provider&apos; to say what it sees then %&apos;then receive response&apos; and show the picture %&apos;show photo?&apos;" type="command" category="sensing"><header></header><code></code><inputs><input type="%txt"><options>Google
Microsoft
IBM Watson</options></input><input type="%cmdRing"></input><input type="%s"></input></inputs><script><custom-block s="run eCraft2Learn command %txt with %mult%s"><l>take_picture_and_analyse</l><list><block var="cloud provider"/><block var="show photo?"/><block var="then receive response"/></list></custom-block></script></block-definition><block-definition s="Do %&apos;handle response&apos; with what Google sees and show the photo %&apos;show&apos;" type="command" category="sensing"><header></header><code></code><inputs><input type="%cmdRing"></input><input type="%b"></input></inputs><script><custom-block s="Ask %txt to say what it sees then %cmdRing and show the picture %s"><l>Google</l><block s="reifyScript"><script><block s="doRun"><block var="handle response"/><list><custom-block s="Google labels"></custom-block></list></block></script><list><l>response</l></list></block><block var="show"/></custom-block></script></block-definition><block-definition s="Do %&apos;handle response&apos; with what IBM Watson sees and show the photo %&apos;show&apos;" type="command" category="sensing"><header></header><code></code><inputs><input type="%cmdRing"></input><input type="%b"></input></inputs><script><custom-block s="Ask %txt to say what it sees then %cmdRing and show the picture %s"><l>Watson</l><block s="reifyScript"><script><block s="doRun"><block var="handle response"/><list><block s="errorObsolete"></block></list></block></script><list><l>response</l></list></block><block var="show"/></custom-block></script></block-definition><block-definition s="Do %&apos;handle response&apos; with what Microsoft sees and show the photo %&apos;show&apos;" type="command" category="sensing"><header></header><code></code><inputs><input type="%cmdRing"></input><input type="%b"></input></inputs><script><custom-block s="Ask %txt to say what it sees then %cmdRing and show the picture %s"><l>Microsoft</l><block s="reifyScript"><script><block s="doRun"><block var="handle response"/><list><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>3</l><block var="responses"/></block></block></block></block></list></block></script><list><l>responses</l></list></block><block var="show"/></custom-block></script></block-definition><block-definition s="IBM Watson image descriptions of new photo" type="reporter" category="sensing"><header></header><code></code><inputs></inputs><script><block s="doDeclareVariables"><list><l>response</l></list></block><block s="doSetVar"><l>response</l><block s="reportBoolean"><l><bool>false</bool></l></block></block><custom-block s="Do %cmdRing with what IBM Watson sees and show the photo %b"><block s="reifyScript"><script><block s="doSetVar"><l>response</l><block var="r"/></block></script><list><l>r</l></list></block><block s="reportBoolean"><l><bool>false</bool></l></block></custom-block><block s="doWaitUntil"><block s="reportNot"><block s="reportEquals"><block var="response"/><block s="reportBoolean"><l><bool>false</bool></l></block></block></block></block><block s="doReport"><block var="response"/></block></script></block-definition><block-definition s="Google image descriptions of new photo" type="reporter" category="sensing"><header></header><code></code><inputs></inputs><script><block s="doDeclareVariables"><list><l>response</l></list></block><block s="doSetVar"><l>response</l><block s="reportBoolean"><l><bool>false</bool></l></block></block><custom-block s="Do %cmdRing with what Google sees and show the photo %b"><block s="reifyScript"><script><block s="doSetVar"><l>response</l><block var="r"/></block></script><list><l>r</l></list></block><block s="reportBoolean"><l><bool>false</bool></l></block></custom-block><block s="doWaitUntil"><block s="reportNot"><block s="reportEquals"><block var="response"/><block s="reportBoolean"><l><bool>false</bool></l></block></block></block></block><block s="doReport"><block var="response"/></block></script></block-definition><block-definition s="Microsoft image descriptions of new photo" type="reporter" category="sensing"><header></header><code></code><inputs></inputs><script><block s="doDeclareVariables"><list><l>response</l></list></block><block s="doSetVar"><l>response</l><block s="reportBoolean"><l><bool>false</bool></l></block></block><custom-block s="Do %cmdRing with what Microsoft sees and show the photo %b"><block s="reifyScript"><script><block s="doSetVar"><l>response</l><block var="r"/></block></script><list><l>r</l></list></block><block s="reportBoolean"><l><bool>false</bool></l></block></custom-block><block s="doWaitUntil"><block s="reportNot"><block s="reportEquals"><block var="response"/><block s="reportBoolean"><l><bool>false</bool></l></block></block></block></block><block s="doReport"><block var="response"/></block></script></block-definition><block-definition s="Recognize image %&apos;cloud provider&apos;" type="reporter" category="sensing"><header></header><code></code><inputs><input type="%s"><options>Google
Microsoft
IBM Watson</options></input></inputs><script><block s="doDeclareVariables"><list><l>response</l></list></block><block s="doSetVar"><l>response</l><block s="reportBoolean"><l><bool>false</bool></l></block></block><custom-block s="Ask %txt to say what it sees then %cmdRing and show the picture %s"><block var="cloud provider"/><block s="reifyScript"><script><block s="doSetVar"><l>response</l><block var="r"/></block></script><list><l>r</l></list></block><block s="reportBoolean"><l><bool>false</bool></l></block></custom-block><block s="doWaitUntil"><block s="reportNot"><block s="reportEquals"><block var="response"/><block s="reportBoolean"><l><bool>false</bool></l></block></block></block></block><block s="doReport"><block var="response"/></block></script></block-definition><block-definition s="Current image property from %&apos;cloud provider&apos; get %&apos;property name or names&apos;" type="reporter" category="sensing"><header></header><code></code><inputs><input type="%txt"><options>Google
Microsoft
IBM Watson</options></input><input type="%mult%txt"></input></inputs><script><block s="doReport"><custom-block s="call eCraft2Learn reporter %txt with %mult%s"><l>image_property</l><list><block var="cloud provider"/><block var="property name or names"/></list></custom-block></block></script></block-definition><block-definition s="IBM Watson scores" type="reporter" category="sensing"><header></header><code></code><inputs></inputs><script><block s="doReport"><custom-block s="Current image property from %txt get %mult%txt"><l>IBM Watson</l><list><l>score</l></list></custom-block></block></script></block-definition><block-definition s="IBM Watson classes" type="reporter" category="sensing"><header></header><code></code><inputs></inputs><script><block s="doReport"><custom-block s="Current image property from %txt get %mult%txt"><l>IBM Watson</l><list><l>class</l></list></custom-block></block></script></block-definition><block-definition s="Google labels" type="reporter" category="sensing"><header></header><code></code><inputs></inputs><script><block s="doReport"><custom-block s="Current image property from %txt get %mult%txt"><l>Google</l><list><l>labelAnnotations</l><l>description</l></list></custom-block></block></script></block-definition><block-definition s="Google label scores" type="reporter" category="sensing"><header></header><code></code><inputs></inputs><script><block s="doReport"><custom-block s="Current image property from %txt get %mult%txt"><l>Google</l><list><l>labelAnnotations</l><l>score</l></list></custom-block></block></script></block-definition><block-definition s="Microsoft labels" type="reporter" category="sensing"><header></header><code></code><inputs></inputs><script><block s="doReport"><custom-block s="Current image property from %txt get %mult%txt"><l>Microsoft</l><list><l>description</l><l>tags</l></list></custom-block></block></script></block-definition><block-definition s="run eCraft2Learn command %&apos;command name&apos; with %&apos;inputs&apos;" type="command" category="other"><header></header><code></code><inputs><input type="%txt"></input><input type="%mult%s"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>function_name</l><l>parameters</l></list><l>if (typeof ecraft2learn === &apos;object&apos;) {&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;    ecraft2learn.run(function_name, parameters);&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;} else {&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;    var script = document.createElement("script");&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;    script.type = "text/javascript";&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;    script.src = "https://toontalk.github.io/ai-cloud/ecraft2learn.js";&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;    script.addEventListener(&apos;load&apos;, function () {&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;        ecraft2learn.run(function_name, parameters);&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;    });&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;    document.head.appendChild(script);&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;}</l></block><list><block var="command name"/><block var="inputs"/></list></block></script></block-definition><block-definition s="call eCraft2Learn reporter %&apos;reporter name&apos; with %&apos;inputs&apos;" type="reporter" category="other"><header></header><code></code><inputs><input type="%txt"></input><input type="%mult%s"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>function_name</l><l>parameters</l></list><l>if (typeof ecraft2learn === &apos;object&apos;) {&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;    return ecraft2learn.run(function_name, parameters);&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;} else {&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;    alert("Any eCraft2Learn command must be run before the " + function_name + " reporter.");&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;    return 0;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;&#xD;}</l></block><list><block var="reporter name"/><block var="inputs"/></list></block></block></script></block-definition><block-definition s="Watson image key" type="reporter" category="other"><header></header><code></code><inputs></inputs><script><block s="doReport"><l>Enter your key here</l></block></script></block-definition><block-definition s="Microsoft image key" type="reporter" category="other"><header></header><code></code><inputs></inputs><script><block s="doReport"><l>Enter your key here</l></block></script></block-definition><block-definition s="Google image key" type="reporter" category="other"><header></header><code></code><inputs></inputs><script><block s="doReport"><l>Enter your key here</l></block></script></block-definition><block-definition s="Setup camera %&apos;width&apos; %&apos;height&apos;" type="command" category="other"><header></header><code></code><inputs><input type="%n"></input><input type="%n"></input></inputs><script><custom-block s="run eCraft2Learn command %txt with %mult%s"><l>setup_camera</l><list><block var="width"/><block var="height"/></list></custom-block></script></block-definition></blocks>