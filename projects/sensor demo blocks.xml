<blocks app="Snap! 5.4, http://snap.berkeley.edu" version="1"><block-definition s="Turn on device sensors" type="command" category="sensing"><comment w="488.5714285714286" collapsed="true">Called by &apos;get device sensor&apos; to initialise sensor listening. Ignores all but the first time it is called.</comment><header></header><code></code><translations></translations><inputs></inputs><script><block s="doRun"><block s="reportJSFunction"><list></list><l>if (typeof window.sensor_readings === &apos;object&apos;) {&#xD;  return; // already set up&#xD;}&#xD;&#xD;window.sensor_readings = {&#xD;  "x acceleration": &apos;unknown&apos;,&#xD;  "y acceleration": &apos;unknown&apos;,&#xD;  "z acceleration": &apos;unknown&apos;,&#xD;  "x axis rotation": &apos;unknown&apos;,&#xD;  "y axis rotation": &apos;unknown&apos;,&#xD;  "z axis rotation": &apos;unknown&apos;,&#xD;  "latitude": &apos;unknown&apos;,&#xD;  "longitude": &apos;unknown&apos;,&#xD;  "altitude": &apos;unknown&apos;,&#xD;};&#xD;&#xD;let accelerometer;&#xD;&#xD;if (typeof Accelerometer === &apos;function&apos;) {&#xD; accelerometer = new Accelerometer({frequency: 60});&#xD;&#xD; accelerometer.addEventListener(&apos;reading&apos;, e =&gt; {&#xD;   if (typeof accelerometer.x === &apos;number&apos;) {&#xD;     window.sensor_readings[&apos;x acceleration&apos;] = accelerometer.x;&#xD;   }&#xD;   if (typeof accelerometer.y === &apos;number&apos;) {&#xD;     window.sensor_readings[&apos;y acceleration&apos;] = accelerometer.y;&#xD;   }&#xD;   if (typeof accelerometer.z === &apos;number&apos;) {&#xD;     window.sensor_readings[&apos;z acceleration&apos;] = accelerometer.z;&#xD;   }&#xD;  });&#xD;}&#xD;&#xD;if ("permissions" in navigator) {&#xD;  // following from https://developer.mozilla.org/en-US/docs/Web/API/AbsoluteOrientationSensor&#xD;  Promise.all([navigator.permissions.query({ name: "accelerometer" }),&#xD;               navigator.permissions.query({ name: "magnetometer" }),&#xD;               navigator.permissions.query({ name: "gyroscope" })])&#xD;         .then(results =&gt; {&#xD;           if (results.every(result =&gt; result.state === "granted")) {&#xD;             if (accelerometer) {&#xD;               accelerometer.start();&#xD;             }&#xD;             // AbsoluteOrientationSensor computes a quaternion which is a pain to convert so use this older API instead&#xD;             if (window.DeviceOrientationEvent) {&#xD;                window.addEventListener(&apos;deviceorientation&apos;,&#xD;                            (event) =&gt; {&#xD;                                if (typeof event.beta === &apos;number&apos;) {&#xD;                                  window.sensor_readings[&apos;x axis rotation&apos;] = event.beta;&#xD;                                }&#xD;                                if (typeof event.gamma === &apos;number&apos;) {&#xD;                                  window.sensor_readings[&apos;y axis rotation&apos;] = event.gamma;&#xD;                                }&#xD;                                if (typeof event.alpha === &apos;number&apos;) {&#xD;                                  window.sensor_readings[&apos;z axis rotation&apos;] = event.alpha;&#xD;                                }&#xD;                });&#xD;             }&#xD;           } else {&#xD;             console.log("No permissions to use device orientation sensor.");&#xD;           }&#xD;  });&#xD;}&#xD;&#xD;if ("geolocation" in navigator) {&#xD;  navigator.geolocation.watchPosition(position =&gt; {&#xD;                                        const coordinates = position.coords;&#xD;                                        if (typeof coordinates.latitude === &apos;number&apos;) {&#xD;                                          window.sensor_readings[&apos;latitude&apos;] = coordinates.latitude;&#xD;                                        }&#xD;                                        if (typeof coordinates.longitude === &apos;number&apos;) {&#xD;                                          window.sensor_readings[&apos;longitude&apos;] = coordinates.longitude;&#xD;                                        }&#xD;                                        if (typeof coordinates.altitude === &apos;number&apos;) {&#xD;                                          window.sensor_readings[&apos;altitude&apos;] = coordinates.altitude;&#xD;                                        }&#xD;                                      },&#xD;                                      error =&gt; {&#xD;                                        console.log("Unable to access geolocation.");&#xD;                                      },&#xD;                                      {enableHighAccuracy: true});&#xD;}&#xD;&#xD;&#xD;&#xD;</l></block><list></list></block></script></block-definition><block-definition s="get device sensor %&apos;sensor name&apos;" type="reporter" category="sensing"><comment w="352.14285714285717" collapsed="false">Reports the current value of a sensor if known otherwise reports &apos;unknown&apos;.</comment><header></header><code></code><translations></translations><inputs><input type="%txt" readonly="true"><options>x acceleration&#xD;y acceleration&#xD;z acceleration&#xD;x axis rotation&#xD;y axis rotation&#xD;z axis rotation&#xD;latitude&#xD;longitude&#xD;altitude</options></input></inputs><script><custom-block s="Turn on device sensors"></custom-block><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>sensor_name</l></list><l>return sensor_readings[sensor_name]</l></block><list><block var="sensor name"/></list></block></block></script></block-definition></blocks>